#!/usr/bin/env python3
import sys
from pathlib import Path


def text_to_ast(source):
    node = root = []
    parent = (root, None)
    string = ""
    for char in source:
        if char not in "()":
            string += char
            continue
        if string:
            node.append(string.rstrip())
        string = ""
        if char == "(":
            parent = (node, parent)
            node.append([])
            node = node[-1]
        elif char == ")":
            node, parent = parent
    assert len(node) == 1
    return node[0]


def ast_to_text(ast):
    if isinstance(ast, str):
        return ast.strip()
    ast = [x for x in ast if isinstance(x, list) or x.strip()]
    if len(ast) == 0:
        return "()"
    if len(ast) == 1 and isinstance(ast[0], str):
        return "".join(x.strip() + "\n" for x in ast[0].strip().split("\n"))
    lines = [f"({ast[0]}"]
    for x in ast[1:]:
        for line in ast_to_text(x).split("\n"):
            lines.append("\t" + line)
    lines.append(")")
    return "\n".join(lines)


def main(args: list[str]):
    assert len(args) == 2
    source = Path(args[1]).read_text()
    print(source)
    ast = text_to_ast(source)
    print(ast)
    # print(text_to_ast(source))
    # print("->")
    # print(ast_to_text(ast))


if __name__ == "__main__":
    main(sys.argv)
